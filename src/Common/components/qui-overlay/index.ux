<template>
  <div class="qui-overlay">
    <div class="{{className}}" style="background-color: {{background}}" show="{{show}}" @click="overlayClick">
      <div @click="interceptor">
        <slot></slot>
      </div>
    </div>
  </div>
</template>

<style>
  @keyframes quioverlayenter {
    0% {
      opacity: 0;
    }
    100% {
      opacity: 1;
    }
  }

  @keyframes quioverlayleave {
    0% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  .qui-overlay-enter {
    animation-name: quioverlayenter;
  }

  .qui-overlay-leave {
    animation-name: quioverlayleave;
  }

  .qui-overlay>div {
    position: fixed;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    justify-content: center;
    align-items: center;
    animation-duration: 500ms;
    animation-fill-mode: forwards;
  }

  .qui-overlay>div>div {
    flex-direction: column;
    align-items: center;
  }
</style>

<script>
  /**
   * visible: '1'/'0',   //是否显示
   * background: 'rgba(0,0,0,.4)'   //遮罩层背景色
   */
  export default {
    props: {
      visible: {
        type: String,
        default: '0'
      },
      background: {
        type: String,
        default: 'rgba(0,0,0,0.4)'
      }
    },
    data: {
      show: false,
      className: ''
    },
    onInit() {
      this.$watch('visible', 'updateVisible')
      this.updateVisible()
    },
    updateVisible() {
      if (this.timeoutId) clearTimeout(this.timeoutId)  //防止更改太快

      if (this.visible === '1') {
        this.show = true
        this.className = 'qui-overlay-enter'
      } else {
        this.className = 'qui-overlay-leave'
        this.timeoutId = setTimeout(() => {
          this.show = false
        }, 500)
      }
    },
    overlayClick() {
      this.$emit('quiOverlayClick')
    },
    interceptor() {  //拦截click事件
    }
  }
</script>