<!-- Created by yzhangbao on 18/04/03. -->
<!-- qui-switch -->

<template>
  <div>
    <div class="qui-switch-box">
      <label if="replaceIsLeft && label" style="margin-right: {{labelMargin}};font-size: {{labelFontSize}};color: {{labelColor}}" target="{{id}}" class="name name-left">{{label}}</label>
      <stack class="checkbox {{replaceDisabled ? 'disabled' : ''}}" style="background-color: {{replaceValue ? checkedColor : checkColor}}" id="{{id}}" @click="evtAction">
        <div class="thumb {{replaceValue ? 'open' : 'close'}}" style="background-color: {{replaceValue ? thumbCheckedColor : thumbCheckColor}}"></div>
      </stack>
      <label if="!replaceIsLeft && label" style="margin-left: {{labelMargin}};font-size: {{labelFontSize}};color: {{labelColor}}" target="{{id}}" class="name">{{label}}</label>
    </div>
  </div>
</template>

<style>
  .qui-switch-box {
    align-items: center;
  }

  .checkbox {
    width: 156px;
    height: 76px;
    border-radius: 38px;
  }

  .disabled {
    opacity: .5;
  }

  .thumb {
    margin: 4px;
    width: 68px;
    height: 68px;
    border-radius: 34px;
  }

  @keyframes open {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(80px);
    }
  }

  .open {
    animation-name: open;
    animation-duration: 200ms;
    animation-fill-mode: forwards;
  }

  @keyframes close {
    from {
      transform: translateX(80px);
    }
    to {
      transform: translateX(0);
    }
  }

  .close {
    animation-name: close;
    animation-duration: 200ms;
    animation-fill-mode: forwards;
  }
</style>

<script>
  export default {
    props: {
      disabled: {
        type: String,
        default: '0'
      },
      value: {
        type: String,
        default: '0'
      },
      id: String,
      label: String,
      labelMargin: {
        type: String,
        default: '30px'
      },
      labelFontSize: {
        type: String,
        default: '44px'
      },
      labelColor: {
        type: String,
        default: '#000000'
      },
      isLeft: {
        type: String,
        default: '0'
      },
      checkColor: {
        type: String,
        default: '#C1C1C1'
      },
      checkedColor: {
        type: String,
        default: '#2998F9'
      },
      thumbCheckColor: {
        type: String,
        default: '#FFFFFF'
      },
      thumbCheckedColor: {
        type: String,
        default: '#FFFFFF'
      }
    },
    data: {
      replaceValue: false,
      replaceDisabled: false,
      replaceIsLeft: false
    },
    onInit() {
      this.initialize()
    },
    onReady() {
      this.$watch('value', 'initialize')
      this.$watch('replaceValue', 'change')
    },
    initialize() {
      if (this.isLeft !== '0') {
        this.replaceIsLeft = true
      }
      if (this.disabled !== '0') {
        this.replaceDisabled = true
      }
      if (this.value !== '0') {
        this.replaceValue = true
      } else {
        this.replaceValue = false
      }
    },
    evtAction() {
      if (!this.replaceDisabled) {
        this.replaceValue = !this.replaceValue
      }
    },
    change() {
      this.$emit('quiSwitchChange', { id: this.id, value: this.replaceValue ? '1' : '0' })
    }
  }
</script>